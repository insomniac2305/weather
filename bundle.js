(()=>{"use strict";var n={28:(n,t,e)=>{e.d(t,{Z:()=>c});var o=e(537),r=e.n(o),a=e(645),i=e.n(a)()(r());i.push([n.id,":root {\n  --color-main: #3148ac;\n  --shadow: 2px 2px 15px -5px rgba(75, 75, 75, 0.2);\n  font-family: Tahoma, Geneva, Verdana, sans-serif;\n  color: #242d58;\n}\n\nhtml {\n  height: 100%;\n}\n\nbody {\n  display: grid;\n  height: 100%;\n  margin: 0;\n  grid-template-columns: minmax(100%, 500px);\n  grid-template-rows: 1fr auto;\n  background-color: var(--color-main);\n}\n\n#app {\n  margin: 20px;\n  align-self: center;\n  justify-self: center;\n  background-color: rgb(255, 255, 255, 0.8);\n  border-radius: 20px;\n  display: grid;\n  grid-template-rows: auto auto auto auto auto;\n  align-items: center;\n  justify-items: center;\n}\n\n#location-form {\n  display: grid;\n  grid-template-columns: auto auto;\n  gap: 10px;\n  margin: 15px;\n}\n\n.input-wrapper {\n  background-color: #fff;\n  height: 40px;\n  display: grid;\n  grid-template-columns: 40px 250px 20px;\n  border-radius: 20px;\n  box-shadow: var(--shadow);\n}\n\n.input-wrapper:focus-within {\n  outline: 1px solid var(--color-main);\n}\n\n.input-wrapper > input {\n  appearance: none;\n  border: none;\n  outline: none;\n  font-size: 20px;\n}\n\n.input-wrapper > img.location-icon,\n#location-form > button {\n  align-self: center;\n  justify-self: center;\n}\n\n.input-wrapper > img.location-icon,\nimg.search-icon {\n  width: 20px;\n}\n\n#location-form > button {\n  appearance: none;\n  outline: none;\n  border: none;\n  background-color: var(--color-main);\n  height: 40px;\n  width: 40px;\n  padding: 5px;\n  border-radius: 20px;\n  box-shadow: var(--shadow);\n}\n\n#location-form > button:hover {\n  filter: brightness(1.2);\n  cursor: pointer;\n}\n\n#location-form > button:active {\n  filter: brightness(1.4);\n}\n\n.location {\n  font-size: 2rem;\n  margin: 20px;\n}\n\nimg.weather-icon {\n  width: 250px;\n  filter: drop-shadow(3px 3px 5px rgb(0 0 0 / 0.2));\n}\n\n.temperature {\n  font-size: 4rem;\n  font-weight: bold;\n  margin-top: 20px;\n  margin-bottom: 10px;\n}\n\n.weather-desc {\n  font-size: 1.5rem;\n  margin-bottom: 20px;\n  text-transform: capitalize;\n}\n\n\n.copyright {\n  color: #b3b3b3;\n  font-size: 20px;\n  padding: 10px;\n  text-decoration: none;\n}\n.attribution {\n  position: absolute;\n  background-color: #fff;\n  color: #4d4d4d;\n  font-size: 12px;\n  padding: 15px;\n  bottom: 25px;\n  left: 25px;\n  border-radius: 20px;\n  opacity: 0;\n  transition: opacity 0.3s ease-in-out;\n  margin-right: 25px;\n}\n\n.copyright:focus + .attribution {\n  opacity: 1;\n}\n\n.attribution a {\n  color: #747474;\n}\n","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,qBAAqB;EACrB,iDAAiD;EACjD,gDAAgD;EAChD,cAAc;AAChB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,aAAa;EACb,YAAY;EACZ,SAAS;EACT,0CAA0C;EAC1C,4BAA4B;EAC5B,mCAAmC;AACrC;;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,oBAAoB;EACpB,yCAAyC;EACzC,mBAAmB;EACnB,aAAa;EACb,4CAA4C;EAC5C,mBAAmB;EACnB,qBAAqB;AACvB;;AAEA;EACE,aAAa;EACb,gCAAgC;EAChC,SAAS;EACT,YAAY;AACd;;AAEA;EACE,sBAAsB;EACtB,YAAY;EACZ,aAAa;EACb,sCAAsC;EACtC,mBAAmB;EACnB,yBAAyB;AAC3B;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,gBAAgB;EAChB,YAAY;EACZ,aAAa;EACb,eAAe;AACjB;;AAEA;;EAEE,kBAAkB;EAClB,oBAAoB;AACtB;;AAEA;;EAEE,WAAW;AACb;;AAEA;EACE,gBAAgB;EAChB,aAAa;EACb,YAAY;EACZ,mCAAmC;EACnC,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,mBAAmB;EACnB,yBAAyB;AAC3B;;AAEA;EACE,uBAAuB;EACvB,eAAe;AACjB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,eAAe;EACf,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,iDAAiD;AACnD;;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;EACjB,mBAAmB;EACnB,0BAA0B;AAC5B;;;AAGA;EACE,cAAc;EACd,eAAe;EACf,aAAa;EACb,qBAAqB;AACvB;AACA;EACE,kBAAkB;EAClB,sBAAsB;EACtB,cAAc;EACd,eAAe;EACf,aAAa;EACb,YAAY;EACZ,UAAU;EACV,mBAAmB;EACnB,UAAU;EACV,oCAAoC;EACpC,kBAAkB;AACpB;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,cAAc;AAChB",sourcesContent:[":root {\n  --color-main: #3148ac;\n  --shadow: 2px 2px 15px -5px rgba(75, 75, 75, 0.2);\n  font-family: Tahoma, Geneva, Verdana, sans-serif;\n  color: #242d58;\n}\n\nhtml {\n  height: 100%;\n}\n\nbody {\n  display: grid;\n  height: 100%;\n  margin: 0;\n  grid-template-columns: minmax(100%, 500px);\n  grid-template-rows: 1fr auto;\n  background-color: var(--color-main);\n}\n\n#app {\n  margin: 20px;\n  align-self: center;\n  justify-self: center;\n  background-color: rgb(255, 255, 255, 0.8);\n  border-radius: 20px;\n  display: grid;\n  grid-template-rows: auto auto auto auto auto;\n  align-items: center;\n  justify-items: center;\n}\n\n#location-form {\n  display: grid;\n  grid-template-columns: auto auto;\n  gap: 10px;\n  margin: 15px;\n}\n\n.input-wrapper {\n  background-color: #fff;\n  height: 40px;\n  display: grid;\n  grid-template-columns: 40px 250px 20px;\n  border-radius: 20px;\n  box-shadow: var(--shadow);\n}\n\n.input-wrapper:focus-within {\n  outline: 1px solid var(--color-main);\n}\n\n.input-wrapper > input {\n  appearance: none;\n  border: none;\n  outline: none;\n  font-size: 20px;\n}\n\n.input-wrapper > img.location-icon,\n#location-form > button {\n  align-self: center;\n  justify-self: center;\n}\n\n.input-wrapper > img.location-icon,\nimg.search-icon {\n  width: 20px;\n}\n\n#location-form > button {\n  appearance: none;\n  outline: none;\n  border: none;\n  background-color: var(--color-main);\n  height: 40px;\n  width: 40px;\n  padding: 5px;\n  border-radius: 20px;\n  box-shadow: var(--shadow);\n}\n\n#location-form > button:hover {\n  filter: brightness(1.2);\n  cursor: pointer;\n}\n\n#location-form > button:active {\n  filter: brightness(1.4);\n}\n\n.location {\n  font-size: 2rem;\n  margin: 20px;\n}\n\nimg.weather-icon {\n  width: 250px;\n  filter: drop-shadow(3px 3px 5px rgb(0 0 0 / 0.2));\n}\n\n.temperature {\n  font-size: 4rem;\n  font-weight: bold;\n  margin-top: 20px;\n  margin-bottom: 10px;\n}\n\n.weather-desc {\n  font-size: 1.5rem;\n  margin-bottom: 20px;\n  text-transform: capitalize;\n}\n\n\n.copyright {\n  color: #b3b3b3;\n  font-size: 20px;\n  padding: 10px;\n  text-decoration: none;\n}\n.attribution {\n  position: absolute;\n  background-color: #fff;\n  color: #4d4d4d;\n  font-size: 12px;\n  padding: 15px;\n  bottom: 25px;\n  left: 25px;\n  border-radius: 20px;\n  opacity: 0;\n  transition: opacity 0.3s ease-in-out;\n  margin-right: 25px;\n}\n\n.copyright:focus + .attribution {\n  opacity: 1;\n}\n\n.attribution a {\n  color: #747474;\n}\n"],sourceRoot:""}]);const c=i},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",o=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),o&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),o&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var A=this[c][0];null!=A&&(i[A]=!0)}for(var p=0;p<n.length;p++){var s=[].concat(n[p]);o&&i[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),e&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=e):s[2]=e),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),t.push(s))}},t}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,o=0;o<t.length;o++)if(t[o].identifier===n){e=o;break}return e}function o(n,o){for(var a={},i=[],c=0;c<n.length;c++){var A=n[c],p=o.base?A[0]+o.base:A[0],s=a[p]||0,d="".concat(p," ").concat(s);a[p]=s+1;var u=e(d),l={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)t[u].references++,t[u].updater(l);else{var f=r(l,o);o.byIndex=c,t.splice(c,0,{identifier:d,updater:f,references:1})}i.push(d)}return i}function r(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=e(a[i]);t[c].references--}for(var A=o(n,r),p=0;p<a.length;p++){var s=e(a[p]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}a=A}}},569:n=>{var t={};n.exports=function(n,e){var o=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var r=void 0!==e.layer;r&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,r&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return n[o](a,a.exports,e),a.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var t=e.g.document;if(!n&&t&&(t.currentScript&&(n=t.currentScript.src),!n)){var o=t.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),e.nc=void 0,(()=>{var n=e(379),t=e.n(n),o=e(795),r=e.n(o),a=e(569),i=e.n(a),c=e(565),A=e.n(c),p=e(216),s=e.n(p),d=e(589),u=e.n(d),l=e(28),f={};f.styleTagTransform=u(),f.setAttributes=A(),f.insert=i().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=s(),t()(l.Z,f),l.Z&&l.Z.locals&&l.Z.locals;const m=e.p+"a7d25e0e77c260cb8a12.svg",g=e.p+"dc2b5aa4da507ed3ddd4.svg",C=e.p+"f67f9128738461958c63.svg",E=e.p+"a8fcbfd2b48cb596f9d1.svg",h=e.p+"e4bb47de6869521268ab.svg",b=e.p+"bf8dc6ceb9ed154839b8.svg",x=e.p+"bdc2862741f6751526a3.svg",B=e.p+"19403ee225990e13c304.svg",v=e.p+"aaa54f3a428676d2f48d.svg",y=e.p+"c665ca3730cccd3e1ec0.svg",w=e.p+"4d944b0aa69a14d563ad.svg",Y=e.p+"dae22e4a744892ad6347.svg",j=e.p+"99b97f1993f5fcbc800d.png",S=e.p+"e6a5a529824b6738cb7a.png",k=e.p+"229297055f5c1e01385a.png",T=(()=>{const n={"01d":g,"02d":C,"03d":m,"04d":v,"09d":y,"10d":E,"11d":Y,"13d":w,"50d":h,"01n":b,"02n":x,"03n":m,"04n":v,"09n":y,"10n":B,"11n":Y,"13n":w,"50n":h,"not-found":j,search:S,location:k};return{getIcon:t=>{let e=n[t];return e=e||j,e}}})(),q=document.querySelector(".location"),z=document.querySelector(".temperature"),Z=document.querySelector(".weather-desc"),D=document.querySelector(".weather-icon"),I=document.querySelector("#location"),M=document.querySelector("#location-form"),U=document.querySelector(".search-icon"),$=document.querySelector(".location-icon");async function N(n){const t=await async function(n){let t;try{const e=await fetch(`https://api.openweathermap.org/data/2.5/weather?appid=610c66bbb97cde2f3b16c870a3f539df&q=${n}&units=metric`,{mode:"cors"}),o=await e.json();t={location:`${o.name}, ${o.sys.country}`,temperature:Math.round(o.main.temp),description:o.weather[0].description,icon:o.weather[0].icon}}catch(n){t={location:"Oops!",temperature:"-",description:"Error fetching data",icon:"not-found"}}return t}(n);q.innerText=t.location,z.innerText=`${t.temperature}°`,Z.innerText=t.description,D.src=T.getIcon(t.icon)}U.src=T.getIcon("search"),$.src=T.getIcon("location"),M.addEventListener("submit",(n=>{n.preventDefault();const t=I.value;""!==t&&(N(t),I.value="")})),async function(){let n;try{const t=await fetch("https://ipapi.co/json/",{mode:"cors"}),e=await t.json();n=`${e.city}, ${e.country_code}`}catch(t){n="Berlin, DE"}return n}().then((n=>N(n))),I.focus()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,